@function parseInt($n) {
	@return calc($n);
}

@mixin rem($property, $values) {
	$px: ();
	$rem: ();

	$root: $baseFontSize;

	@each $value in $values {
		@if $value==0 or $value==auto {
			$px: append($px, $value);
			$rem: append($rem, $value);
		}

		@else if type-of($value)==number {
			$unit: unit($value);
			$val: parseInt($value);

			@if $unit=="px" {
				$px: append($px, $value);
				$rem: append($rem, calc($val / $root) + rem);
        $rem: str-slice(#{$rem}, 1, str-index(#{$rem}, "px") - 1) + rem;
			}

			@if $unit=="rem" {
				$px: append($px, calc($val * $root) + px);
        $px: str-slice(#{$px}, 1, str-index(#{$px}, "rem") - 1) + px;
				$rem: append($rem, $value);
			}
		}

		@else {
			$px: append($px, $value);
			$rem: append($rem, $value);
		}
	}

	@if $px==$rem {
		#{$property}: $px;
	}

	@else {
		#{$property}: $px;
		#{$property}: $rem;
	}
}

@function rem($value) {
	$root: $baseFontSize;
	$val: parseInt($value);
	$return: ();

	@if unit($value)=="px" {
		$return: append($return, ($val / $root + rem));
	}

	@else {
		$return: append($return, ($val * $root + px));
	}

	@return $return;
}